#https://leetcode.com/problems/binary-tree-right-side-view/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        
        result = [ ]
        self.utilRightSideView(root,0,result)
        
        return [current[-1] for current in result]
        
    def utilRightSideView(self,root,height,result):
        
        if root == None:
            return
        if len(result)<=height:
            result.append([])
            
        result[height].append(root.val)
        
        self.utilRightSideView(root.left,height+1,result)
        self.utilRightSideView(root.right,height+1,result)
        
