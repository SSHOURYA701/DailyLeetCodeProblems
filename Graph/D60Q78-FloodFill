#https://leetcode.com/problems/flood-fill/

class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]:
        
        vis = [[0 for i in range(len(image[0]))] for j in range(len(image))]
        
        Queue = []
        
        Queue.append((sr,sc))
        vis[sr][sc] = 1
        while Queue:
            
            currCorr = Queue.pop(0)
            row,col = currCorr[0],currCorr[1]
            #downn
            if (row+1<len(image)) and (image[row][col] == image[row+1][col]) and (vis[row+1][col] == 0):
                Queue.append((row+1,col))
                vis[row+1][col] = 1
                
            #up
            if (row-1>=0) and (image[row][col] == image[row-1][col]) and (vis[row-1][col] == 0):
                Queue.append((row-1,col))
                vis[row-1][col] = 1
            
            #Right
            if (col+1 <len(image[0])) and(image[row][col] == image[row][col+1]) and (vis[row][col+1] == 0):
                Queue.append((row,col+1))
                vis[row][col+1] = 1
             
            #Left
            if (col-1 >=0) and (image[row][col] == image[row][col-1]) and (vis[row][col-1] == 0):
                Queue.append((row,col-1))
                vis[row][col-1] = 1
            
            image[row][col] = newColor
            
        return image
