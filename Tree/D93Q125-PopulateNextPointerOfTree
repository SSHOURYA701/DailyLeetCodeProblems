#https://leetcode.com/problems/populating-next-right-pointers-in-each-node/submissions/

"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution:
    def connect(self, root: 'Optional[Node]') -> 'Optional[Node]':
        
        
        #do a level order traversal store the nodes and for each level point the next to the 
        
        
        levelTraversal = defaultdict(list)
        
        self.util(root,0,levelTraversal)
        
        for level in levelTraversal.keys():
            prev = levelTraversal[level][0]
            # print(prev)
            for nodeNum in range(1,len(levelTraversal[level])):
                
                prev.next = levelTraversal[level][nodeNum]
                prev = prev.next
        
        return root
                
                
    def util(self,curr,level,levelTraversal):
        
        if curr == None:
            return
        
        levelTraversal[level].append(curr)
        
        self.util(curr.left,level+1,levelTraversal)
        self.util(curr.right,level+1,levelTraversal)
        
    
        
        
