#https://leetcode.com/problems/rotting-oranges/

class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        
        rows,cols = len(grid),len(grid[0])
        vis = [[0 for i in range(cols)] for j in range(rows)]
        
        # print(grid,vis)
        
        Queue = []

        #Loop for getting all the rotten oranges
        for row in range(rows):
            for col in range(cols):
                if grid[row][col] == 2:
                    #3rd value is the current minute
                    Queue.append((row,col,0))
                    vis[row][col] = 1
        
        # print(Queue)
        answer = 0
        while Queue:
            currNode = Queue.pop(0)
            row,col,currTime = currNode[0],currNode[1],currNode[2]
            # vis[row][col]=1
            
            #Try to traverse the 4 directions
            
            #up
            if (col-1>=0) and (grid[row][col-1] == 1) and (vis[row][col-1] == 0):
                Queue.append((row,col-1,currTime+1))
                vis[row][col-1] = 1
                grid[row][col-1] = 2

            #down
            if (col+1<cols) and (grid[row][col+1] == 1) and (vis[row][col+1] == 0):
                Queue.append((row,col+1,currTime+1))
                vis[row][col+1] = 1
                grid[row][col+1] = 2
                
                
            #left
            if (row-1>=0) and (grid[row-1][col] == 1) and (vis[row-1][col] == 0):
                Queue.append((row-1,col,currTime+1))
                vis[row-1][col] = 1
                grid[row-1][col] = 2
        
            #right
            if (row+1<rows) and (grid[row+1][col] == 1) and (vis[row+1][col] == 0):
                Queue.append((row+1,col,currTime+1))
                vis[row+1][col] = 1
                grid[row+1][col] = 2
            
            answer = currTime
        
        #Looking for any good orange left 
        for row in range(rows):
            for col in range(cols):
                if grid[row][col] == 1:
                    return -1        
        
        return answer
