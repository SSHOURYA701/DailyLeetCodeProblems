#https://leetcode.com/problems/path-sum-ii/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        
        if root == None:
            return []
        
        result = []
        self.utilPathSum(root,[].copy(),result,targetSum)
        
        return result
        
    def utilPathSum(self,root,currList,result,targetSum):
            
            if root == None:
                return
            
            if (root.left == None) and (root.right==None):
                
                if targetSum - root.val ==0:
                    currList.append(root.val)
                    # print("Leaf",currList,targetSum,root.val)
                    result.append(currList)
                    return
                else:
                    return
            else:
                currList.append(root.val)
                # print("Non Leaf",currList,targetSum,root.val)
                self.utilPathSum(root.left,currList.copy(),result,targetSum-root.val)
                self.utilPathSum(root.right,currList.copy(),result,targetSum-root.val)
                
                
