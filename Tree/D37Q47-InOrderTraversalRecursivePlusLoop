#https://leetcode.com/problems/binary-tree-inorder-traversal/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

#Recursive
def inorderTraversalUtil(root,result):
    if root == None:
        return
    inorderTraversalUtil(root.left,result)
    result.append(root.val)
    inorderTraversalUtil(root.right,result)
    
    
class Solution:
    def inorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        result = []
        
        #Uncomment for Recursive
        # inorderTraversalUtil(root,result)
        
        #Loop Traversal
        
        curr =root
        stack = []
        while (curr!=None or len(stack)!=0):
            while (curr!=None):
                stack.append(curr)
                curr =curr.left
                
            curr = stack.pop()
            result.append(curr.val)
            curr = curr.right

        return result
        
        
