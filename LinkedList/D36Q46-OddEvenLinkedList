#https://leetcode.com/problems/odd-even-linked-list/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        if head ==None or head.next == None or head.next.next==None:
            return head
        
        oddHead=oddPtr=head
        evenHead=evenPtr=head.next
        
        while True:
            oddPtr.next=evenPtr.next
            if oddPtr.next==None:
                oddPtr.next = evenHead
                break
            oddPtr = oddPtr.next
            
            evenPtr.next=oddPtr.next
            if evenPtr.next == None:
                oddPtr.next=evenHead
                break
            evenPtr = evenPtr.next
        
        
        return head
