#https://leetcode.com/problems/balanced-binary-tree/
#For this problem, a height-balanced binary tree is defined as:
#a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        self.status=True
        def util(root):
            
            if root == None:
                return 0
            left = util(root.left)
            right = util(root.right)
            
            if self.status != False:
                self.status = False if abs(left-right) >1 else True
            
            return 1+max (left,right)
        util(root)
        return self.status
        



        
