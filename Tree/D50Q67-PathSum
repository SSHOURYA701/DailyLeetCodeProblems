#https://leetcode.com/problems/path-sum/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        if root == None:
            return False
        
        if (root.left == None) and (root.right == None):
            if targetSum - root.val == 0:
                return True
            else:
                return False
        else:
            leftNode = self.hasPathSum(root.left,targetSum - root.val)
            rightNode = self.hasPathSum(root.right,targetSum - root.val)
            
            return leftNode or rightNode
        
        
